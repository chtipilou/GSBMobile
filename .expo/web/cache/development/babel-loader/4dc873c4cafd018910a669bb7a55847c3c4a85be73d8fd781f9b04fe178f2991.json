{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\BTS\\\\AP\\\\GSBVTTMobile\\\\src\\\\screens\\\\visits\\\\VisitListScreen.tsx\",\n  _this = this;\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useNavigation } from '@react-navigation/native';\nimport { fetchVisites } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VisitListScreen = function VisitListScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    visits = _useState2[0],\n    setVisits = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var navigation = useNavigation();\n  var loadVisites = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setError('');\n        var data = yield fetchVisites();\n        setVisits(data);\n      } catch (err) {\n        setError('Erreur lors du chargement des visites');\n        console.error(err);\n      }\n    });\n    return function loadVisites() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onRefresh = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      yield loadVisites();\n      setRefreshing(false);\n    });\n    return function onRefresh() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadVisites();\n  }, []);\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: loadVisites,\n        children: _jsxDEV(Text, {\n          style: styles.retryText,\n          children: \"R\\xE9essayer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this);\n  }\n  var renderItem = function renderItem(_ref3) {\n    var _item$cabinet, _item$medecin;\n    var item = _ref3.item;\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.visitCard,\n      onPress: function onPress() {\n        return navigation.navigate('VisitDetail', {\n          visitId: item.id\n        });\n      },\n      children: [_jsxDEV(Text, {\n        style: styles.dateText,\n        children: new Date(item.date_visite).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, _this), _jsxDEV(Text, {\n        children: [\"Cabinet: \", ((_item$cabinet = item.cabinet) == null ? void 0 : _item$cabinet.nom) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, _this), _jsxDEV(Text, {\n        children: [\"M\\xE9decin: \", ((_item$medecin = item.medecin) == null ? void 0 : _item$medecin.nom) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, _this), _jsxDEV(Text, {\n        children: [\"RDV: \", item.rendez_vous ? 'Oui' : 'Non']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, _this);\n  };\n  return _jsxDEV(FlatList, {\n    data: visits,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    refreshControl: _jsxDEV(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  visitCard: {\n    backgroundColor: '#fff',\n    padding: 15,\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10\n  },\n  retryButton: {\n    backgroundColor: '#007AFF',\n    padding: 10,\n    borderRadius: 5\n  },\n  retryText: {\n    color: 'white'\n  }\n});\nexport default VisitListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","TouchableOpacity","RefreshControl","useNavigation","fetchVisites","jsxDEV","_jsxDEV","VisitListScreen","_useState","_useState2","_slicedToArray","visits","setVisits","_useState3","_useState4","refreshing","setRefreshing","_useState5","_useState6","error","setError","navigation","loadVisites","_ref","_asyncToGenerator","data","err","console","apply","arguments","onRefresh","_ref2","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","retryButton","onPress","retryText","renderItem","_ref3","_item$cabinet","_item$medecin","item","visitCard","navigate","visitId","id","dateText","Date","date_visite","toLocaleDateString","cabinet","nom","medecin","rendez_vous","keyExtractor","toString","refreshControl","create","flex","padding","alignItems","justifyContent","backgroundColor","marginHorizontal","marginVertical","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","marginBottom","color"],"sources":["D:/BTS/AP/GSBVTTMobile/src/screens/visits/VisitListScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, RefreshControl } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { fetchVisites } from '../../services/api';\nimport { Visite } from '../../types';\n\nconst VisitListScreen = () => {\n  const [visits, setVisits] = useState<Visite[]>([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [error, setError] = useState('');\n  const navigation = useNavigation();\n\n  const loadVisites = async () => {\n    try {\n      setError('');\n      const data = await fetchVisites();\n      setVisits(data);\n    } catch (err) {\n      setError('Erreur lors du chargement des visites');\n      console.error(err);\n    }\n  };\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    await loadVisites();\n    setRefreshing(false);\n  };\n\n  useEffect(() => {\n    loadVisites();\n  }, []);\n\n  if (error) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.error}>{error}</Text>\n        <TouchableOpacity style={styles.retryButton} onPress={loadVisites}>\n          <Text style={styles.retryText}>Réessayer</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  const renderItem = ({ item }: { item: Visite }) => (\n    <TouchableOpacity \n      style={styles.visitCard}\n      onPress={() => navigation.navigate('VisitDetail', { visitId: item.id })}\n    >\n      <Text style={styles.dateText}>\n        {new Date(item.date_visite).toLocaleDateString()}\n      </Text>\n      <Text>Cabinet: {item.cabinet?.nom || 'N/A'}</Text>\n      <Text>Médecin: {item.medecin?.nom || 'N/A'}</Text>\n      <Text>RDV: {item.rendez_vous ? 'Oui' : 'Non'}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <FlatList\n      data={visits}\n      renderItem={renderItem}\n      keyExtractor={item => item.id.toString()}\n      refreshControl={\n        <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n      }\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  visitCard: {\n    backgroundColor: '#fff',\n    padding: 15,\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10,\n  },\n  retryButton: {\n    backgroundColor: '#007AFF',\n    padding: 10,\n    borderRadius: 5,\n  },\n  retryText: {\n    color: 'white',\n  },\n});\n\nexport default VisitListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}