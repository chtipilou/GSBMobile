{"ast":null,"code":"var _jsxFileName = \"D:\\\\BTS\\\\AP\\\\GSBVTTMobile\\\\src\\\\components\\\\visits\\\\VisitCard.tsx\",\n  _this = this;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VisitCard = function VisitCard(_ref) {\n  var visit = _ref.visit;\n  var navigation = useNavigation();\n  var formatDate = function formatDate(dateString) {\n    var date = new Date(dateString);\n    return date.toLocaleDateString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n  var formatTime = function formatTime(timeString) {\n    if (timeString && timeString.includes(' ')) {\n      return timeString.split(' ')[1].substring(0, 5);\n    }\n    return timeString ? timeString.substring(0, 5) : '';\n  };\n  var handlePress = function handlePress() {\n    navigation.navigate('VisitDetail', {\n      visitId: visit.id_visite\n    });\n  };\n  return _jsxDEV(TouchableOpacity, {\n    style: styles.card,\n    onPress: handlePress,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.date,\n        children: formatDate(visit.date_visite)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: [styles.badge, visit.rendez_vous ? styles.rdvBadge : styles.noRdvBadge],\n        children: _jsxDEV(Text, {\n          style: [styles.badgeText, visit.rendez_vous ? styles.rdvText : styles.noRdvText],\n          children: visit.rendez_vous ? 'RDV' : 'Sans RDV'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.body,\n      children: [_jsxDEV(Text, {\n        style: styles.medecin,\n        children: [\"Dr. \", visit.prenom_medecin, \" \", visit.nom_medecin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.time,\n        children: [formatTime(visit.heure_arrivee), visit.temps_visite && ` (${formatTime(visit.temps_visite)})`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 15,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  date: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333'\n  },\n  badge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12\n  },\n  rdvBadge: {\n    backgroundColor: '#e8f5e9'\n  },\n  noRdvBadge: {\n    backgroundColor: '#ffebee'\n  },\n  badgeText: {\n    fontSize: 12,\n    fontWeight: '600'\n  },\n  rdvText: {\n    color: '#2e7d32'\n  },\n  noRdvText: {\n    color: '#c62828'\n  },\n  body: {\n    marginTop: 5\n  },\n  medecin: {\n    fontSize: 15,\n    color: '#333',\n    marginBottom: 4\n  },\n  time: {\n    fontSize: 14,\n    color: '#666'\n  }\n});\nexport default VisitCard;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","useNavigation","jsxDEV","_jsxDEV","VisitCard","_ref","visit","navigation","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","formatTime","timeString","includes","split","substring","handlePress","navigate","visitId","id_visite","style","styles","card","onPress","children","header","date_visite","fileName","_jsxFileName","lineNumber","columnNumber","_this","badge","rendez_vous","rdvBadge","noRdvBadge","badgeText","rdvText","noRdvText","body","medecin","prenom_medecin","nom_medecin","time","heure_arrivee","temps_visite","create","backgroundColor","borderRadius","padding","marginVertical","marginHorizontal","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","color","paddingHorizontal","paddingVertical","marginTop"],"sources":["D:/BTS/AP/GSBVTTMobile/src/components/visits/VisitCard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\ninterface VisitCardProps {\r\n  visit: {\r\n    id_visite: number;\r\n    date_visite: string;\r\n    heure_arrivee: string;\r\n    nom_medecin: string;\r\n    prenom_medecin: string;\r\n    rendez_vous: boolean;\r\n    temps_visite?: string;\r\n  };\r\n}\r\n\r\nconst VisitCard: React.FC<VisitCardProps> = ({ visit }) => {\r\n  const navigation = useNavigation();\r\n  \r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatTime = (timeString: string) => {\r\n    // Extrait l'heure depuis un datetime complet (2025-03-06 14:57:25)\r\n    if (timeString && timeString.includes(' ')) {\r\n      return timeString.split(' ')[1].substring(0, 5); // Extrait HH:MM\r\n    }\r\n    return timeString ? timeString.substring(0, 5) : '';\r\n  };\r\n\r\n  const handlePress = () => {\r\n    navigation.navigate('VisitDetail', { visitId: visit.id_visite });\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.card} onPress={handlePress}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.date}>{formatDate(visit.date_visite)}</Text>\r\n        <View style={[\r\n          styles.badge, \r\n          visit.rendez_vous ? styles.rdvBadge : styles.noRdvBadge\r\n        ]}>\r\n          <Text style={[\r\n            styles.badgeText,\r\n            visit.rendez_vous ? styles.rdvText : styles.noRdvText\r\n          ]}>\r\n            {visit.rendez_vous ? 'RDV' : 'Sans RDV'}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      \r\n      <View style={styles.body}>\r\n        <Text style={styles.medecin}>\r\n          Dr. {visit.prenom_medecin} {visit.nom_medecin}\r\n        </Text>\r\n        <Text style={styles.time}>\r\n          {formatTime(visit.heure_arrivee)}\r\n          {visit.temps_visite && ` (${formatTime(visit.temps_visite)})`}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 8,\r\n    padding: 15,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  date: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  },\r\n  badge: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 12,\r\n  },\r\n  rdvBadge: {\r\n    backgroundColor: '#e8f5e9',\r\n  },\r\n  noRdvBadge: {\r\n    backgroundColor: '#ffebee',\r\n  },\r\n  badgeText: {\r\n    fontSize: 12,\r\n    fontWeight: '600',\r\n  },\r\n  rdvText: {\r\n    color: '#2e7d32',\r\n  },\r\n  noRdvText: {\r\n    color: '#c62828',\r\n  },\r\n  body: {\r\n    marginTop: 5,\r\n  },\r\n  medecin: {\r\n    fontSize: 15,\r\n    color: '#333',\r\n    marginBottom: 4,\r\n  },\r\n  time: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n});\r\n\r\nexport default VisitCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}