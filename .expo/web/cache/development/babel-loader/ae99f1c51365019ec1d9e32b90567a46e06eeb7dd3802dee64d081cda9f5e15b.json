{"ast":null,"code":"var _jsxFileName = \"D:\\\\BTS\\\\AP\\\\GSBVTTMobile\\\\src\\\\components\\\\common\\\\Button.tsx\",\n  _this = this;\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n    onPress = _ref.onPress,\n    buttonStyle = _ref.buttonStyle,\n    textStyle = _ref.textStyle;\n  return _jsxDEV(TouchableOpacity, {\n    style: [styles.button, buttonStyle],\n    onPress: onPress,\n    children: _jsxDEV(Text, {\n      style: [styles.text, textStyle],\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#007BFF',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  text: {\n    color: '#FFFFFF',\n    fontSize: 16\n  }\n});\nexport default Button;","map":{"version":3,"names":["React","TouchableOpacity","Text","StyleSheet","jsxDEV","_jsxDEV","Button","_ref","title","onPress","buttonStyle","textStyle","style","styles","button","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_this","create","backgroundColor","padding","borderRadius","alignItems","color","fontSize"],"sources":["D:/BTS/AP/GSBVTTMobile/src/components/common/Button.tsx"],"sourcesContent":["// filepath: /GSBVTTMobile/GSBVTTMobile/src/components/common/Button.tsx\n\nimport React from 'react';\nimport { TouchableOpacity, Text, StyleSheet, ViewStyle, TextStyle } from 'react-native';\n\ninterface ButtonProps {\n  title: string;\n  onPress: () => void;\n  buttonStyle?: ViewStyle;\n  textStyle?: TextStyle;\n}\n\nconst Button: React.FC<ButtonProps> = ({ title, onPress, buttonStyle, textStyle }) => {\n  return (\n    <TouchableOpacity style={[styles.button, buttonStyle]} onPress={onPress}>\n      <Text style={[styles.text, textStyle]}>{title}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#007BFF',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  text: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n});\n\nexport default Button;"],"mappings":";;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAU1B,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAmD;EAAA,IAA7CC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IAAEC,SAAS,GAAAJ,IAAA,CAATI,SAAS;EAC7E,OACEN,OAAA,CAACJ,gBAAgB;IAACW,KAAK,EAAE,CAACC,MAAM,CAACC,MAAM,EAAEJ,WAAW,CAAE;IAACD,OAAO,EAAEA,OAAQ;IAAAM,QAAA,EACtEV,OAAA,CAACH,IAAI;MAACU,KAAK,EAAE,CAACC,MAAM,CAACG,IAAI,EAAEL,SAAS,CAAE;MAAAI,QAAA,EAAEP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAO;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACrC,CAAC;AAEvB,CAAC;AAED,IAAMR,MAAM,GAAGV,UAAU,CAACmB,MAAM,CAAC;EAC/BR,MAAM,EAAE;IACNS,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE;EACd,CAAC;EACDV,IAAI,EAAE;IACJW,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAetB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}