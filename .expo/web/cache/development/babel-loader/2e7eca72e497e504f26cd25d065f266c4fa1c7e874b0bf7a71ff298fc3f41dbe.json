{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\BTS\\\\AP\\\\GSBVTTMobile\\\\src\\\\screens\\\\auth\\\\LoginScreen.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { login } from '../../services/api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState('claire.moreau@example.com'),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState('password'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        Alert.alert('Erreur', 'Veuillez entrer votre email et mot de passe');\n        return;\n      }\n      try {\n        setLoading(true);\n        var response = yield login(email, password);\n        if (response && response.token) {\n          yield AsyncStorage.setItem('userToken', response.token);\n          yield AsyncStorage.setItem('userData', JSON.stringify(response.user));\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Home'\n            }]\n          });\n        } else {\n          Alert.alert('Erreur', 'Identifiants incorrects');\n        }\n      } catch (error) {\n        console.error(error);\n        Alert.alert('Erreur', 'Connexion impossible');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: _jsxDEV(View, {\n      style: styles.formContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"GSB Visites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.subtitle,\n        children: \"Connectez-vous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.inputContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.label,\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: email,\n          onChangeText: setEmail,\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\",\n          editable: !loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.inputContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.label,\n          children: \"Mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this), _jsxDEV(TextInput, {\n          style: styles.input,\n          value: password,\n          onChangeText: setPassword,\n          secureTextEntry: true,\n          editable: !loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLogin,\n        disabled: loading,\n        children: loading ? _jsxDEV(ActivityIndicator, {\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, _this) : _jsxDEV(Text, {\n          style: styles.loginButtonText,\n          children: \"Connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 10,\n    color: '#1e3c72'\n  },\n  subtitle: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 30,\n    color: '#666'\n  },\n  inputContainer: {\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: 5,\n    color: '#333'\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    fontSize: 16\n  },\n  loginButton: {\n    backgroundColor: '#1e3c72',\n    padding: 15,\n    borderRadius: 8,\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","Alert","SafeAreaView","login","AsyncStorage","jsxDEV","_jsxDEV","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","handleLogin","_ref2","_asyncToGenerator","alert","response","token","setItem","JSON","stringify","user","reset","index","routes","name","error","console","apply","arguments","style","styles","container","children","formContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","subtitle","inputContainer","label","input","value","onChangeText","autoCapitalize","keyboardType","editable","secureTextEntry","loginButton","onPress","disabled","color","loginButtonText","create","flex","backgroundColor","justifyContent","padding","fontSize","fontWeight","textAlign","marginBottom","borderRadius","borderWidth","borderColor","marginTop","alignItems"],"sources":["D:/BTS/AP/GSBVTTMobile/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  View, \n  Text, \n  TextInput, \n  TouchableOpacity, \n  StyleSheet, \n  ActivityIndicator,\n  Alert,\n  SafeAreaView\n} from 'react-native';\nimport { login } from '../../services/api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('claire.moreau@example.com');\n  const [password, setPassword] = useState('password');\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email || !password) {\n      Alert.alert('Erreur', 'Veuillez entrer votre email et mot de passe');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await login(email, password);\n      \n      if (response && response.token) {\n        await AsyncStorage.setItem('userToken', response.token);\n        await AsyncStorage.setItem('userData', JSON.stringify(response.user));\n        \n        navigation.reset({\n          index: 0,\n          routes: [{ name: 'Home' }],\n        });\n      } else {\n        Alert.alert('Erreur', 'Identifiants incorrects');\n      }\n    } catch (error) {\n      console.error(error);\n      Alert.alert('Erreur', 'Connexion impossible');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.formContainer}>\n        <Text style={styles.title}>GSB Visites</Text>\n        <Text style={styles.subtitle}>Connectez-vous</Text>\n        \n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Email</Text>\n          <TextInput\n            style={styles.input}\n            value={email}\n            onChangeText={setEmail}\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n            editable={!loading}\n          />\n        </View>\n        \n        <View style={styles.inputContainer}>\n          <Text style={styles.label}>Mot de passe</Text>\n          <TextInput\n            style={styles.input}\n            value={password}\n            onChangeText={setPassword}\n            secureTextEntry\n            editable={!loading}\n          />\n        </View>\n        \n        <TouchableOpacity \n          style={styles.loginButton}\n          onPress={handleLogin}\n          disabled={loading}\n        >\n          {loading ? (\n            <ActivityIndicator color=\"#fff\" />\n          ) : (\n            <Text style={styles.loginButtonText}>Connexion</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 10,\n    color: '#1e3c72',\n  },\n  subtitle: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 30,\n    color: '#666',\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: 5,\n    color: '#333',\n  },\n  input: {\n    backgroundColor: 'white',\n    padding: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    fontSize: 16,\n  },\n  loginButton: {\n    backgroundColor: '#1e3c72',\n    padding: 15,\n    borderRadius: 8,\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default LoginScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}