{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\BTS\\\\testAP\\\\GSBMobile\\\\src\\\\App.tsx\",\n  _this = this;\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LoginScreen from './screens/auth/LoginScreen';\nimport HomeScreen from './screens/home/HomeScreen';\nimport VisitListScreen from './screens/visits/VisitListScreen';\nimport AddVisitScreen from './screens/visits/AddVisitScreen';\nimport VisitDetailScreen from './screens/visits/VisitDetailScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoggedIn = _useState4[0],\n    setIsLoggedIn = _useState4[1];\n  useEffect(function () {\n    var checkLoginStatus = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem('userToken');\n          setIsLoggedIn(!!token);\n        } catch (error) {\n          console.error('Erreur vérification token:', error);\n          setIsLoggedIn(false);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function checkLoginStatus() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkLoginStatus();\n  }, []);\n  if (isLoading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1e3c72\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(Stack.Navigator, {\n      initialRouteName: isLoggedIn ? 'Home' : 'Login',\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#1e3c72'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"VisitList\",\n        component: VisitListScreen,\n        options: {\n          title: 'Mes Visites'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"AddVisit\",\n        component: AddVisitScreen,\n        options: {\n          title: 'Nouvelle Visite'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"VisitDetail\",\n        component: VisitDetailScreen,\n        options: {\n          title: 'Détail de la visite'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#555'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","AsyncStorage","ActivityIndicator","View","StyleSheet","Text","LoginScreen","HomeScreen","VisitListScreen","AddVisitScreen","VisitDetailScreen","jsxDEV","_jsxDEV","Stack","App","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isLoggedIn","setIsLoggedIn","checkLoginStatus","_ref","_asyncToGenerator","token","getItem","error","console","apply","arguments","style","styles","loadingContainer","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","loadingText","Navigator","initialRouteName","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","headerShown","title","create","flex","justifyContent","alignItems","marginTop","fontSize"],"sources":["D:/BTS/testAP/GSBMobile/src/App.tsx"],"sourcesContent":["/**\r\n * Point d'entrée principal de l'application\r\n * Gère la navigation et la vérification d'authentification\r\n */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ActivityIndicator, View, StyleSheet, Text } from 'react-native';\r\n\r\n// Écrans\r\nimport LoginScreen from './screens/auth/LoginScreen';\r\nimport HomeScreen from './screens/home/HomeScreen';\r\nimport VisitListScreen from './screens/visits/VisitListScreen';\r\nimport AddVisitScreen from './screens/visits/AddVisitScreen';\r\nimport VisitDetailScreen from './screens/visits/VisitDetailScreen';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst App = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    // Vérifier si un token existe au démarrage de l'app\r\n    const checkLoginStatus = async () => {\r\n      try {\r\n        const token = await AsyncStorage.getItem('userToken');\r\n        // Si un token existe, on considère l'utilisateur comme connecté\r\n        // Dans une vraie application, on vérifierait la validité du token\r\n        setIsLoggedIn(!!token);\r\n      } catch (error) {\r\n        console.error('Erreur vérification token:', error);\r\n        setIsLoggedIn(false);\r\n      } finally {\r\n        // Dans tous les cas, on termine le chargement\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkLoginStatus();\r\n  }, []);\r\n  \r\n  // Afficher un écran de chargement pendant la vérification\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#1e3c72\" />\r\n        <Text style={styles.loadingText}>Chargement...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator \r\n        initialRouteName={isLoggedIn ? 'Home' : 'Login'}\r\n        screenOptions={{\r\n          headerStyle: {\r\n            backgroundColor: '#1e3c72',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      >\r\n        <Stack.Screen \r\n          name=\"Login\" \r\n          component={LoginScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen \r\n          name=\"Home\" \r\n          component={HomeScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen \r\n          name=\"VisitList\" \r\n          component={VisitListScreen}\r\n          options={{ title: 'Mes Visites' }}\r\n        />\r\n        <Stack.Screen \r\n          name=\"AddVisit\" \r\n          component={AddVisitScreen}\r\n          options={{ title: 'Nouvelle Visite' }}\r\n        />\r\n        <Stack.Screen \r\n          name=\"VisitDetail\" \r\n          component={VisitDetailScreen}\r\n          options={{ title: 'Détail de la visite' }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5'\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#555'\r\n  }\r\n});\r\n\r\nexport default App;"],"mappings":";;;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,YAAY,MAAM,2CAA2C;AAAC,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAIrE,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,iBAAiB,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,IAAMC,KAAK,GAAGb,oBAAoB,CAAC,CAAC;AAEpC,IAAMc,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAkClB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAoCvB,QAAQ,CAAC,KAAK,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhCvB,SAAS,CAAC,YAAM;IAEd,IAAM0B,gBAAgB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACnC,IAAI;UACF,IAAMC,KAAK,SAAS1B,YAAY,CAAC2B,OAAO,CAAC,WAAW,CAAC;UAGrDL,aAAa,CAAC,CAAC,CAACI,KAAK,CAAC;QACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDN,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,SAAS;UAERJ,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC;MAAA,gBAbKK,gBAAgBA,CAAA;QAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAarB;IAEDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIN,SAAS,EAAE;IACb,OACEN,OAAA,CAACT,IAAI;MAAC8B,KAAK,EAAEC,MAAM,CAACC,gBAAiB;MAAAC,QAAA,GACnCxB,OAAA,CAACV,iBAAiB;QAACmC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC,EAClD/B,OAAA,CAACP,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACU,WAAY;QAAAR,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACjD,CAAC;EAEX;EAEA,OACE/B,OAAA,CAACb,mBAAmB;IAAAqC,QAAA,EAClBxB,OAAA,CAACC,KAAK,CAACgC,SAAS;MACdC,gBAAgB,EAAExB,UAAU,GAAG,MAAM,GAAG,OAAQ;MAChDyB,aAAa,EAAE;QACbC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF,CAAE;MAAAhB,QAAA,GAEFxB,OAAA,CAACC,KAAK,CAACwC,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAEjD,WAAY;QACvBkD,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACjC,CAAC,EACF/B,OAAA,CAACC,KAAK,CAACwC,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEhD,UAAW;QACtBiD,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACjC,CAAC,EACF/B,OAAA,CAACC,KAAK,CAACwC,MAAM;QACXC,IAAI,EAAC,WAAW;QAChBC,SAAS,EAAE/C,eAAgB;QAC3BgD,OAAO,EAAE;UAAEE,KAAK,EAAE;QAAc;MAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACnC,CAAC,EACF/B,OAAA,CAACC,KAAK,CAACwC,MAAM;QACXC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAE9C,cAAe;QAC1B+C,OAAO,EAAE;UAAEE,KAAK,EAAE;QAAkB;MAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACvC,CAAC,EACF/B,OAAA,CAACC,KAAK,CAACwC,MAAM;QACXC,IAAI,EAAC,aAAa;QAClBC,SAAS,EAAE7C,iBAAkB;QAC7B8C,OAAO,EAAE;UAAEE,KAAK,EAAE;QAAsB;MAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAC3C,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACa;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACC,CAAC;AAE1B,CAAC;AAED,IAAMT,MAAM,GAAG9B,UAAU,CAACuD,MAAM,CAAC;EAC/BxB,gBAAgB,EAAE;IAChByB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBb,eAAe,EAAE;EACnB,CAAC;EACDL,WAAW,EAAE;IACXmB,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZ1B,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}