{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\BTS\\\\AP\\\\GSBVTTMobile\\\\src\\\\screens\\\\visits\\\\VisitListScreen.tsx\",\n  _this = this;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { fetchVisites } from '../../services/api';\nimport VisitCard from '../../components/visits/VisitCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VisitListScreen = function VisitListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    visits = _useState2[0],\n    setVisits = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var loadVisites = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setError(null);\n        var data = yield fetchVisites();\n        setVisits(Array.isArray(data) ? data : []);\n      } catch (err) {\n        setError('Erreur lors du chargement des visites');\n        console.error('Erreur loadVisites:', err);\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function loadVisites() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(useCallback(function () {\n    loadVisites();\n  }, []));\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    loadVisites();\n  }, []);\n  var sortedVisits = useMemo(function () {\n    return _toConsumableArray(visits).sort(function (a, b) {\n      return new Date(b.date_visite).getTime() - new Date(a.date_visite).getTime();\n    });\n  }, [visits]);\n  if (loading && !refreshing) {\n    return _jsxDEV(View, {\n      style: styles.centerContainer,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1e3c72\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.centerContainer,\n      children: _jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(FlatList, {\n      data: sortedVisits,\n      keyExtractor: function keyExtractor(item) {\n        return `visit-${item.id_visite}`;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsxDEV(VisitCard, {\n          visit: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 35\n        }, _this);\n      },\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, _this),\n      contentContainerStyle: styles.listContent,\n      ListEmptyComponent: _jsxDEV(View, {\n        style: styles.emptyContainer,\n        children: _jsxDEV(Text, {\n          style: styles.emptyText,\n          children: \"Aucune visite trouv\\xE9e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  errorText: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  listContent: {\n    paddingVertical: 8\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center'\n  }\n});\nexport default VisitListScreen;","map":{"version":3,"names":["React","useState","useCallback","useMemo","View","Text","FlatList","StyleSheet","RefreshControl","ActivityIndicator","useFocusEffect","fetchVisites","VisitCard","jsxDEV","_jsxDEV","VisitListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","visits","setVisits","_useState3","_useState4","refreshing","setRefreshing","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","loadVisites","_ref2","_asyncToGenerator","data","Array","isArray","err","console","apply","arguments","onRefresh","sortedVisits","_toConsumableArray","sort","a","b","Date","date_visite","getTime","style","styles","centerContainer","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","errorText","container","keyExtractor","item","id_visite","renderItem","_ref3","visit","refreshControl","contentContainerStyle","listContent","ListEmptyComponent","emptyContainer","emptyText","create","flex","backgroundColor","justifyContent","alignItems","padding","fontSize","textAlign","paddingVertical"],"sources":["D:/BTS/AP/GSBVTTMobile/src/screens/visits/VisitListScreen.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { \n  View, \n  Text, \n  FlatList, \n  StyleSheet, \n  RefreshControl,\n  ActivityIndicator\n} from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { fetchVisites } from '../../services/api';\nimport VisitCard from '../../components/visits/VisitCard';\n\ninterface VisitItem {\n  id_visite: number;\n  date_visite: string;\n  heure_arrivee: string;\n  nom_medecin: string;\n  prenom_medecin: string;\n  rendez_vous: boolean;\n  temps_visite: string;\n}\n\nconst VisitListScreen = ({ navigation }) => {\n  const [visits, setVisits] = useState<VisitItem[]>([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadVisites = async () => {\n    try {\n      setError(null);\n      const data = await fetchVisites();\n      setVisits(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setError('Erreur lors du chargement des visites');\n      console.error('Erreur loadVisites:', err);\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  useFocusEffect(\n    useCallback(() => {\n      loadVisites();\n    }, [])\n  );\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    loadVisites();\n  }, []);\n\n  const sortedVisits = useMemo(() => {\n    return [...visits].sort((a, b) => \n      new Date(b.date_visite).getTime() - new Date(a.date_visite).getTime()\n    );\n  }, [visits]);\n\n  if (loading && !refreshing) {\n    return (\n      <View style={styles.centerContainer}>\n        <ActivityIndicator size=\"large\" color=\"#1e3c72\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.centerContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={sortedVisits}\n        keyExtractor={(item) => `visit-${item.id_visite}`}\n        renderItem={({ item }) => <VisitCard visit={item} />}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n        contentContainerStyle={styles.listContent}\n        ListEmptyComponent={\n          <View style={styles.emptyContainer}>\n            <Text style={styles.emptyText}>Aucune visite trouv√©e</Text>\n          </View>\n        }\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  listContent: {\n    paddingVertical: 8,\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center',\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n  },\n});\n\nexport default VisitListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}