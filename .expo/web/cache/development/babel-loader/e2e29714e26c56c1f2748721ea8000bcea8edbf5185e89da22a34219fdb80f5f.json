{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\BTS\\\\AP\\\\GSBVTTMobile\\\\src\\\\screens\\\\visits\\\\VisitListScreen.tsx\",\n  _this = this;\nimport React, { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { fetchVisites } from '../../services/api';\nimport VisitCard from '../../components/visits/VisitCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VisitListScreen = function VisitListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    visits = _useState2[0],\n    setVisits = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var loadVisites = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setError(null);\n        var data = yield fetchVisites();\n        setVisits(Array.isArray(data) ? data : []);\n      } catch (err) {\n        setError('Erreur lors du chargement des visites');\n        console.error('Erreur loadVisites:', err);\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function loadVisites() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(useCallback(function () {\n    loadVisites();\n  }, []));\n  if (loading) {\n    return _jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, _this);\n  }\n  if (error) {\n    return _jsxDEV(Text, {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, _this);\n  }\n  return _jsxDEV(View, {\n    children: _jsxDEV(FlatList, {\n      data: visits,\n      keyExtractor: function keyExtractor(item) {\n        return item.id_visite.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsxDEV(VisitCard, {\n          visit: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 35\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\nexport default VisitListScreen;","map":{"version":3,"names":["React","useState","useCallback","View","Text","FlatList","ActivityIndicator","useFocusEffect","fetchVisites","VisitCard","jsxDEV","_jsxDEV","VisitListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","visits","setVisits","_useState3","_useState4","refreshing","setRefreshing","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","loadVisites","_ref2","_asyncToGenerator","data","Array","isArray","err","console","apply","arguments","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","children","keyExtractor","item","id_visite","toString","renderItem","_ref3","visit"],"sources":["D:/BTS/AP/GSBVTTMobile/src/screens/visits/VisitListScreen.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { \n  View, \n  Text, \n  FlatList, \n  StyleSheet, \n  TouchableOpacity, \n  RefreshControl,\n  ActivityIndicator\n} from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { fetchVisites } from '../../services/api';\nimport VisitCard from '../../components/visits/VisitCard';\n\ninterface VisitItem {\n  id_visite: number;\n  date_visite: string;\n  heure_arrivee: string;\n  nom_medecin: string;\n  prenom_medecin: string;\n  rendez_vous: boolean;\n  temps_visite: string;\n}\n\nconst VisitListScreen = ({ navigation }) => {\n  const [visits, setVisits] = useState<VisitItem[]>([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadVisites = async () => {\n    try {\n      setError(null);\n      const data = await fetchVisites();\n      setVisits(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setError('Erreur lors du chargement des visites');\n      console.error('Erreur loadVisites:', err);\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  useFocusEffect(\n    useCallback(() => {\n      loadVisites();\n    }, [])\n  );\n\n  if (loading) {\n    return <ActivityIndicator size=\"large\" color=\"#0000ff\" />;\n  }\n\n  if (error) {\n    return <Text>Error: {error}</Text>;\n  }\n\n  return (\n    <View>\n      <FlatList\n        data={visits}\n        keyExtractor={(item) => item.id_visite.toString()}\n        renderItem={({ item }) => <VisitCard visit={item} />}\n      />\n    </View>\n  );\n};\n\nexport default VisitListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}