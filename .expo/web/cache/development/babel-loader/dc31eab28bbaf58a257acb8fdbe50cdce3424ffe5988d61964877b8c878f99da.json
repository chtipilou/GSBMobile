{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\BTS\\\\AP\\\\GSBVTTMobile\\\\src\\\\App.tsx\",\n  _this = this;\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { verifyToken } from './services/api';\nimport LoginScreen from './screens/auth/LoginScreen';\nimport HomeScreen from './screens/home/HomeScreen';\nimport VisitListScreen from './screens/visits/VisitListScreen';\nimport AddVisitScreen from './screens/visits/AddVisitScreen';\nimport VisitDetailScreen from './screens/visits/VisitDetailScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoggedIn = _useState4[0],\n    setIsLoggedIn = _useState4[1];\n  useEffect(function () {\n    var checkLoginStatus = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem('userToken');\n          if (token) {\n            var isValid = yield verifyToken(token);\n            setIsLoggedIn(isValid);\n            if (!isValid) {\n              yield AsyncStorage.removeItem('userToken');\n              yield AsyncStorage.removeItem('userData');\n            }\n          } else {\n            setIsLoggedIn(false);\n          }\n        } catch (error) {\n          console.error('Erreur lors de la vérification du token:', error);\n          setIsLoggedIn(false);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function checkLoginStatus() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkLoginStatus();\n  }, []);\n  if (isLoading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1e3c72\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(Stack.Navigator, {\n      initialRouteName: isLoggedIn ? 'Home' : 'Login',\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"VisitList\",\n        component: VisitListScreen,\n        options: {\n          title: 'Mes Visites'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"AddVisit\",\n        component: AddVisitScreen,\n        options: {\n          title: 'Nouvelle Visite'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"VisitDetail\",\n        component: VisitDetailScreen,\n        options: {\n          title: 'Détail de la visite'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","AsyncStorage","ActivityIndicator","View","StyleSheet","verifyToken","LoginScreen","HomeScreen","VisitListScreen","AddVisitScreen","VisitDetailScreen","jsxDEV","_jsxDEV","Stack","App","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isLoggedIn","setIsLoggedIn","checkLoginStatus","_ref","_asyncToGenerator","token","getItem","isValid","removeItem","error","console","apply","arguments","style","styles","loadingContainer","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","Navigator","initialRouteName","Screen","name","component","options","headerShown","title","create","flex","justifyContent","alignItems","backgroundColor"],"sources":["D:/BTS/AP/GSBVTTMobile/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\nimport { verifyToken } from './services/api';\n\nimport LoginScreen from './screens/auth/LoginScreen';\nimport HomeScreen from './screens/home/HomeScreen';\nimport VisitListScreen from './screens/visits/VisitListScreen';\nimport AddVisitScreen from './screens/visits/AddVisitScreen';\nimport VisitDetailScreen from './screens/visits/VisitDetailScreen';\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n  useEffect(() => {\n    // Vérifier si l'utilisateur est connecté au lancement de l'app\n    const checkLoginStatus = async () => {\n      try {\n        const token = await AsyncStorage.getItem('userToken');\n        \n        if (token) {\n          // Vérifier si le token est toujours valide\n          const isValid = await verifyToken(token);\n          setIsLoggedIn(isValid);\n          \n          if (!isValid) {\n            // Si le token n'est plus valide, le supprimer\n            await AsyncStorage.removeItem('userToken');\n            await AsyncStorage.removeItem('userData');\n          }\n        } else {\n          setIsLoggedIn(false);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la vérification du token:', error);\n        setIsLoggedIn(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    checkLoginStatus();\n  }, []);\n  \n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#1e3c72\" />\n      </View>\n    );\n  }\n  \n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName={isLoggedIn ? 'Home' : 'Login'}>\n        <Stack.Screen \n          name=\"Login\" \n          component={LoginScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen \n          name=\"Home\" \n          component={HomeScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen \n          name=\"VisitList\" \n          component={VisitListScreen}\n          options={{ title: 'Mes Visites' }}\n        />\n        <Stack.Screen \n          name=\"AddVisit\" \n          component={AddVisitScreen}\n          options={{ title: 'Nouvelle Visite' }}\n        />\n        <Stack.Screen \n          name=\"VisitDetail\" \n          component={VisitDetailScreen}\n          options={{ title: 'Détail de la visite' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  }\n});\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}